/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const init: () => void;
export const version: (a: number) => void;
export const __wbg_wasmcell_free: (a: number, b: number) => void;
export const wasmcell_new: (a: number, b: number) => void;
export const wasmcell_empty: () => number;
export const wasmcell_hasFormula: (a: number) => number;
export const wasmcell_hasError: (a: number) => number;
export const wasmcell_isEmpty: (a: number) => number;
export const wasmcell_getRawValue: (a: number) => number;
export const wasmcell_getComputedValue: (a: number) => number;
export const wasmcell_getError: (a: number, b: number) => void;
export const wasmcell_toJson: (a: number, b: number) => void;
export const __wbg_wasmevaluationcontext_free: (a: number, b: number) => void;
export const wasmevaluationcontext_new: (a: number) => number;
export const __wbg_wasmevaluator_free: (a: number, b: number) => void;
export const wasmevaluator_new: () => number;
export const wasmevaluator_evaluate: (a: number, b: number, c: number, d: number, e: number) => void;
export const wasmevaluator_evaluateAST: (a: number, b: number, c: number, d: number) => void;
export const wasmevaluator_checkCircular: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => void;
export const __wbg_wasmspreadsheetfacade_free: (a: number, b: number) => void;
export const wasmspreadsheetfacade_new: () => number;
export const wasmspreadsheetfacade_onCellUpdate: (a: number, b: number) => void;
export const wasmspreadsheetfacade_onBatchComplete: (a: number, b: number) => void;
export const wasmspreadsheetfacade_onCalculationComplete: (a: number, b: number) => void;
export const wasmspreadsheetfacade_setCellValue: (a: number, b: number, c: number, d: number, e: number) => void;
export const wasmspreadsheetfacade_getCellValue: (a: number, b: number, c: number) => void;
export const wasmspreadsheetfacade_getCell: (a: number, b: number) => number;
export const wasmspreadsheetfacade_deleteCell: (a: number, b: number, c: number) => void;
export const wasmspreadsheetfacade_recalculate: (a: number, b: number) => void;
export const wasmspreadsheetfacade_recalculateCell: (a: number, b: number, c: number) => void;
export const wasmspreadsheetfacade_beginBatch: (a: number, b: number, c: number, d: number) => void;
export const wasmspreadsheetfacade_commitBatch: (a: number, b: number, c: number, d: number) => void;
export const wasmspreadsheetfacade_rollbackBatch: (a: number, b: number, c: number, d: number) => void;
export const wasmspreadsheetfacade_clear: (a: number) => void;
export const wasmspreadsheetfacade_getCellCount: (a: number) => number;
export const wasmspreadsheetfacade_fill: (a: number, b: number, c: number) => void;
export const wasmspreadsheetfacade_previewFill: (a: number, b: number, c: number) => void;
export const wasmspreadsheetfacade_setCellValues: (a: number, b: number, c: number) => void;
export const wasmspreadsheetfacade_insertRow: (a: number, b: number, c: number) => void;
export const wasmspreadsheetfacade_deleteRow: (a: number, b: number, c: number) => void;
export const wasmspreadsheetfacade_insertColumn: (a: number, b: number, c: number) => void;
export const wasmspreadsheetfacade_deleteColumn: (a: number, b: number, c: number) => void;
export const wasmspreadsheetfacade_undo: (a: number, b: number) => void;
export const wasmspreadsheetfacade_redo: (a: number, b: number) => void;
export const wasmspreadsheetfacade_canUndo: (a: number) => number;
export const wasmspreadsheetfacade_canRedo: (a: number) => number;
export const wasmspreadsheetfacade_getUndoHistory: (a: number, b: number) => void;
export const wasmspreadsheetfacade_getRedoHistory: (a: number, b: number) => void;
export const wasmspreadsheetfacade_clearHistory: (a: number) => void;
export const __wbg_wasmfilloperation_free: (a: number, b: number) => void;
export const wasmfilloperation_new: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number) => number;
export const wasmfilloperation_setPattern: (a: number, b: number, c: number, d: number, e: number) => void;
export const wasmfilloperation_toInternal: (a: number, b: number) => void;
export const createFillOperation: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number) => void;
export const wasmformulaparser_parse: (a: number, b: number, c: number, d: number) => void;
export const wasmformulaparser_parseToJson: (a: number, b: number, c: number, d: number) => void;
export const parseFormula: (a: number, b: number, c: number) => void;
export const __wbg_wasmcellrepository_free: (a: number, b: number) => void;
export const wasmcellrepository_new: () => number;
export const wasmcellrepository_get: (a: number, b: number) => number;
export const wasmcellrepository_set: (a: number, b: number, c: number, d: number) => void;
export const wasmcellrepository_delete: (a: number, b: number) => number;
export const wasmcellrepository_clear: (a: number) => void;
export const wasmcellrepository_contains: (a: number, b: number) => number;
export const wasmcellrepository_isEmpty: (a: number) => number;
export const wasmcellrepository_getCount: (a: number) => number;
export const wasmcellrepository_getAllAddresses: (a: number, b: number) => void;
export const __wbg_wasmcelladdress_free: (a: number, b: number) => void;
export const wasmcelladdress_new: (a: number, b: number) => number;
export const wasmcelladdress_fromString: (a: number, b: number, c: number) => void;
export const wasmcelladdress_toString: (a: number, b: number) => void;
export const wasmcelladdress_col: (a: number) => number;
export const wasmcelladdress_row: (a: number) => number;
export const wasmcelladdress_offset: (a: number, b: number, c: number, d: number) => void;
export const wasmcelladdress_equals: (a: number, b: number) => number;
export const wasmcelladdress_columnLabel: (a: number, b: number) => void;
export const __wbg_wasmcellvalue_free: (a: number, b: number) => void;
export const wasmcellvalue_new: () => number;
export const wasmcellvalue_fromNumber: (a: number) => number;
export const wasmcellvalue_fromString: (a: number, b: number) => number;
export const wasmcellvalue_fromBoolean: (a: number) => number;
export const wasmcellvalue_fromError: (a: number, b: number) => number;
export const wasmcellvalue_fromJS: (a: number, b: number) => void;
export const wasmcellvalue_toJS: (a: number) => number;
export const wasmcellvalue_isNumber: (a: number) => number;
export const wasmcellvalue_isString: (a: number) => number;
export const wasmcellvalue_isBoolean: (a: number) => number;
export const wasmcellvalue_isEmpty: (a: number) => number;
export const wasmcellvalue_isError: (a: number) => number;
export const wasmcellvalue_toString: (a: number, b: number) => void;
export const __wbg_wasmsheet_free: (a: number, b: number) => void;
export const wasmsheet_getName: (a: number, b: number) => void;
export const wasmsheet_getCellCount: (a: number) => number;
export const wasmsheet_setVisible: (a: number, b: number) => void;
export const wasmsheet_setProtected: (a: number, b: number) => void;
export const wasmsheet_getColumnWidth: (a: number, b: number) => number;
export const wasmsheet_setColumnWidth: (a: number, b: number, c: number) => void;
export const wasmsheet_getRowHeight: (a: number, b: number) => number;
export const wasmsheet_setRowHeight: (a: number, b: number, c: number) => void;
export const wasmsheet_clear: (a: number) => void;
export const __wbg_wasmworkbook_free: (a: number, b: number) => void;
export const wasmworkbook_new: () => number;
export const wasmworkbook_withSheet: (a: number, b: number) => number;
export const wasmworkbook_getSheetCount: (a: number) => number;
export const wasmworkbook_getSheetNames: (a: number) => number;
export const wasmworkbook_createSheet: (a: number, b: number, c: number, d: number) => void;
export const wasmworkbook_deleteSheet: (a: number, b: number, c: number, d: number) => void;
export const wasmworkbook_renameSheet: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const wasmworkbook_getActiveSheetName: (a: number) => number;
export const wasmworkbook_setActiveSheet: (a: number, b: number, c: number, d: number) => void;
export const wasmworkbook_getSheetFacade: (a: number, b: number, c: number, d: number) => void;
export const wasmworkbook_getActiveFacade: (a: number, b: number) => void;
export const wasmworkbook_copySheet: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const wasmworkbook_moveSheet: (a: number, b: number, c: number, d: number, e: number) => void;
export const wasmworkbook_getCellValue: (a: number, b: number, c: number, d: number) => number;
export const wasmworkbook_setCellValue: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => void;
export const __wbg_wasmsheetmanager_free: (a: number, b: number) => void;
export const wasmsheetmanager_new: () => number;
export const wasmsheetmanager_getStatistics: (a: number) => number;
export const wasmformulaparser_new: () => number;
export const __wbg_wasmformulaparser_free: (a: number, b: number) => void;
export const __wbindgen_export_0: (a: number, b: number) => number;
export const __wbindgen_export_1: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_export_2: (a: number) => void;
export const __wbindgen_export_3: (a: number, b: number, c: number) => void;
export const __wbindgen_add_to_stack_pointer: (a: number) => number;
export const __wbindgen_start: () => void;
